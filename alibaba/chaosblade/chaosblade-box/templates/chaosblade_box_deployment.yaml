apiVersion: apps/v1
kind: Deployment
metadata:
  name: chaosblade-box
  labels:
    name: chaosblade-box
    app: chaosblade-box
spec:
  selector:
    matchLabels:
      name: chaosblade-box
      app: chaosblade-box
  template:
    metadata:
      labels:
        name: chaosblade-box
        app: chaosblade-box
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: type
                    operator: NotIn
                    values:
                      - virtual-kubelet
      containers:
        - name: chaosblade-box
          image: {{ .Values.box.repository }}:{{ .Values.box.version }}
          imagePullPolicy: {{ .Values.box.pullPolicy }}
          env:
            - name: KUBERNETES_NODENAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          args:
            {{ if .Values.ingress.enabled }}
            - '--server.servlet.context-path={{ .Values.ingress.path }}'
            {{ end }}
            - '--spring.datasource.url={{ .Values.spring.datasource.url }}'
            - '--spring.datasource.username={{ .Values.spring.datasource.username }}'
            - '--spring.datasource.password={{ .Values.spring.datasource.password }}'
            - '--chaos.collector.enable={{ .Values.chaos.collector.enable }}'
            - '--chaos.collector.period={{ .Values.chaos.collector.period }}'
            - '--chaos.collector.type={{ .Values.chaos.collector.type }}'
            - '--chaos.collector.prometheus.api={{ .Values.chaos.collector.prometheus.api }}'
            - '--logging.level.root={{ .Values.logging.level.root }}'
            - '--logging.level.com.alibaba.chaosblade.box={{ .Values.logging.level.box }}'
            - '--chaos.agent.port={{ .Values.chaos.agent.port }}'
            {{ if .Values.chaos.scene.market }}
            - '--chaos.scene.market={{ .Values.chaos.scene.market }}'
            {{ end }}
            - '--chaos.scene.originals.litmus[0].name={{ .Values.chaos.scene.originals.litmus.generic.name }}'
            - '--chaos.scene.originals.litmus[0].version={{ .Values.chaos.scene.originals.litmus.generic.version }}'
            - '--chaos.scene.originals.litmus[0].url={{ .Values.chaos.scene.originals.litmus.generic.url }}'
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /var/run/docker.sock
              name: docker-socket
            - mountPath: /etc/hosts
              name: hosts

      dnsPolicy: ClusterFirstWithHostNet
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
        - hostPath:
            path: /var/run/docker.sock
          name: docker-socket
        - hostPath:
            path: /etc/hosts
          name: hosts
      serviceAccountName: chaosblade-box
