kind: PersistentVolume
apiVersion: v1
metadata:
  name: mysql-master-pv
  labels:
    db: mysql
    env: dev
    relate: master
spec:
  storageClassName: mysql
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /var/lib/nfs/mysql/master
    server: 10.181.4.88
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mysql-master-pvc
spec:
  selector:
    matchLabels:
      db: mysql
      env: dev
      relate: master
  storageClassName: mysql
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: mysql-master
spec:
  selector:
    matchLabels:
      db: mysql
      env: dev
      relate: master
  # 必须对应一个name是mysql的服务资源
  serviceName: write-mysql-svc
  replicas: 1
  template:
    metadata:
      labels:
        db: mysql
        env: dev
        relate: master
    spec:
      initContainers:
      - name: init-mysql
        image: mysql:5.7
        command:
        - bash
        - "-c"
        - |
          set -ex
          # Generate mysql server-id from pod ordinal index.
          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
          ordinal=${BASH_REMATCH[1]}
          echo [mysqld] > /mnt/conf.d/server-id.cnf
          # Add an offset to avoid reserved server-id=0 value.
          echo server-id=$((10 + $ordinal)) >> /mnt/conf.d/server-id.cnf
          # Copy appropriate conf.d files from config-map to emptyDir.
          cp /mnt/config-map/master.cnf /mnt/conf.d/
        volumeMounts:
        - name: conf
          mountPath: /mnt/conf.d
        - name: config-map
          mountPath: /mnt/config-map
      containers:
      - name: mysql
        image: mysql:5.7
        env:
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "1"
        #- name: MYSQL_ROOT_PASSWORD
        #  valueFrom:
        #    secretKeyRef:
        #      name: mysql
        #      key: root_password
        ports:
        - name: mysql
          containerPort: 3306
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: conf
          mountPath: /etc/mysql/conf.d
        resources:
          requests:
            cpu: 200m
            memory: 100Mi
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            # Check we can execute queries over TCP (skip-networking is off).
            command: ["mysql", "-h", "127.0.0.1", "-e", "SELECT 1"]
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1
      - name: xtrabackup
        image: gcr.io/google-samples/xtrabackup:1.0
        imagePullPolicy: IfNotPresent
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql
              key: root_password
        ports:
        - name: xtrabackup
          containerPort: 3307
        command:
        - bash
        - "-c"
        - |
          set -ex
          # Start a server to send backups when requested by peers.
          exec ncat --listen --keep-open --send-only --max-conns=1 3307 -c \
            "xtrabackup --backup --slave-info --stream=xbstream --host=127.0.0.1 --user=root"
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: conf
          mountPath: /etc/mysql/conf.d
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      - name: mysqld-exporter
        image: prom/mysqld-exporter
        ports:
        - name: http
          containerPort: 9104
#        command:
#          - '--collect.my-cnf=/etc/master.cnf'
#          - '--collect.slave_status'
#          - '--collect.slave_hosts'
#          - '--collect.info_schema.processlist'
#          - '--collect.info_schema.innodb_metrics'
#          - '--collect.info_schema.innodb_tablespaces'
#          - '--collect.info_schema.replica_host'
#          - '--collect.info_schema.innodb_cmp'
#          - '--collect.info_schema.innodb_cmpmem'
#        volumeMounts:
#          - name: exporter-cnf
#            mountPath: /etc/master.cnf
#            subPath: master.cnf
        env:
          - name: DATA_SOURCE_NAME
            valueFrom:
              configMapKeyRef:
                name: exporter
                key: dataSourceName

        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      volumes:
      - name: conf
        emptyDir: {}
      - name: config-map
        configMap:
          name: mysql
      - name: exporter-cnf
        configMap:
          name: exporter
          items:
            - key: master.cnf
              path: master.cnf
      - name: data
        persistentVolumeClaim:
          claimName: mysql-master-pvc
